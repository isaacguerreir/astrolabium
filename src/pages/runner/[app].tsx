import { InferGetServerSidePropsType } from 'next';
import Head from 'next/head';
import { trpc } from '../../utils/trpc';
import { Loading } from '../../components/commons'
import RemoteModule from '../../components/pages/runner/RemoteModule';

export async function getServerSideProps(context: any) {
  return {
    props: {
      ...context.params 
    }
  }
}

const AppRunner = ({ app }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { isLoading, data  } = trpc.apps.findOne.useQuery({ id: app }) 

  return isLoading ? (
		<>
      <Head>
        <title>App Runner</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
				<Loading />
      </main>
		</>
	) : ( data && <RemoteModule {...data} /> )
}


export default AppRunner
